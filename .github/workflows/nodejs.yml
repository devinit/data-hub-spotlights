name: Node CI

on: [push, pull_request]

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install yarn
      run: npm install -g yarn
    - name: yarn install, test
      run: |
        yarn install
        yarn test
      env:
        CI: true
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        ref: fix/docker-build
    - name: clear old build files
      run: |
        rm -rf build.zip build
        yarn install
    - name: Building
      run: |
        yarn build
    - name: Bundling
      run: |
        mkdir build && mv .next build/ && mv dist/* build/ && mv package.json build/ && mv yarn.lock build/ && mv Dockerfile build/
        zip -q -r build.zip build
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.1.0
        release_name: v0.1.0
        draft: false
        prerelease: false 
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build.zip
        asset_name: build.zip
        asset_content_type: application/zip
    - name: Return to original state
      run: |
        git reset .
        git checkout .
        rm -rf build
        echo "DONE!"
    #- shell: bash
    #  run: |
    #    chmod +x build.sh
    #    ./build.sh $GITHUB_TOKEN
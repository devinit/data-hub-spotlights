name: Node CI

<<<<<<< HEAD
on: [push]
=======
on:
  push:
    branches:
      - fix/docker-build
  pull_request:
    branches:
      - fix/docker-build
>>>>>>> e90b49103a2e5eb6201120f48b91f5b0ef18dbcd

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install yarn
      run: npm install -g yarn
    - name: yarn install, test
      run: |
        yarn install
        yarn test
      env:
        CI: true
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        ref: fix/docker-build
    - name: clear old build files
      run: |
        rm -rf build.zip build
        yarn install
    - name: Building
      run: |
        yarn build
    - name: Bundling
      run: |
<<<<<<< HEAD
        mkdir build && mv .next build/ && mv dist/* build/ && mv package.json build/ && mv yarn.lock build/ && mv Dockerfile build/
=======
        mkdir build && mv .next build/ && mv dist/* build/ && mv package.json build/ && mv yarn.lock build/ && mv Dockerfile build/ && mv docker-compose.yml build/ && mv nginx/ build/
>>>>>>> e90b49103a2e5eb6201120f48b91f5b0ef18dbcd
        zip -q -r build.zip build
    - name: Upload build Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: ./build.zip
    - name: Upload deploy script as an artifact
      uses: actions/upload-artifact@v1
      with:
        name: deploy
        path: ./deploy_script.sh
    - name: Return to original state
      run: |
        git reset .
        git checkout .
        rm -rf build
        echo "DONE!"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: deploy
        path: ./deploy_script.sh
    - name: download build artifact
      uses: actions/download-artifact@v1
      with:
        name: build
        path: ./build.zip
<<<<<<< HEAD
    - name: copy deploy_file via ssh password
=======
    - name: copy deploy_file via ssh
>>>>>>> e90b49103a2e5eb6201120f48b91f5b0ef18dbcd
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.KEY }}
      with:
        source: "./deploy_script.sh,./build.zip"
        target: "deploy_spotlights"
<<<<<<< HEAD
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
=======
    - name: executing remote ssh commands using ssh
      uses: appleboy/ssh-action@master
      env:
        ASSETS_SOURCE_URL: ${{ secrets.ASSETS_SOURCE_URL }}
>>>>>>> e90b49103a2e5eb6201120f48b91f5b0ef18dbcd
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ./deploy_spotlights/deploy_script.sh && chmod +x deploy_script.sh && bash deploy_script.sh